#include "tsm.cpp"


int main(){

//12x12 graph
int G[20][20] = 
    {0, 17, 40, 100, 32, 11, 29, 77, 73, 53, 52, 72, 0, 0, 0, 0, 0, 0, 0, 0,
    48, 0, 23, 42, 81, 5, 12, 37, 31, 55, 18, 66, 0, 0, 0, 0, 0, 0, 0, 0,
    48, 97, 0, 74, 21, 43, 8, 37, 48, 13, 55, 88, 0, 0, 0, 0, 0, 0, 0, 0,
    79, 53, 66, 0, 8, 97, 38, 61, 48, 76, 75, 71, 0, 0, 0, 0, 0, 0, 0, 0,
    18, 56, 42, 97, 0, 59, 40, 51, 77, 5, 65, 39, 0, 0, 0, 0, 0, 0, 0, 0,
    45, 86, 82, 20, 23, 0, 96, 100, 44, 84, 45, 97, 0, 0, 0, 0, 0, 0, 0, 0,
    15, 53, 93, 53, 80, 7, 0, 29, 21, 78, 13, 43, 0, 0, 0, 0, 0, 0, 0, 0,
    87, 9, 1, 26, 26, 44, 98, 0, 92, 49, 9, 77, 0, 0, 0, 0, 0, 0, 0, 0,
    30, 29, 66, 93, 28, 9, 76, 73, 0, 73, 91, 92, 0, 0, 0, 0, 0, 0, 0, 0,
    31, 9, 38, 38, 38, 25, 83, 17, 68, 0, 69, 93, 0, 0, 0, 0, 0, 0, 0, 0,
    35, 61, 19, 45, 24, 10, 94, 33, 53, 90, 0, 62, 0, 0, 0, 0, 0, 0, 0, 0,
    19, 82, 57, 95, 57, 96, 67, 13, 54, 65, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};


//12x12 graph
int G2[20][20] = {
    {0, 0, 0, 0, 50, 77, 49, 83, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {66, 0, 0, 55, 58, 23, 79, 64, 0, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {26, 0, 0, 95, 0, 0, 67, 81, 0, 0, 9, 94, 0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 22, 33, 77, 6, 76, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {46, 56, 0, 0, 0, 71, 55, 75, 24, 98, 77, 45, 0, 0, 0, 0, 0, 0, 0, 0},
    {77, 0, 48, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {4, 97, 74, 8, 21, 0, 0, 19, 70, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0},
    {89, 0, 19, 0, 51, 29, 0, 0, 20, 89, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {81, 38, 0, 0, 9, 65, 0, 50, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {27, 94, 9, 76, 0, 12, 0, 0, 0, 0, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {42, 0, 78, 28, 0, 59, 0, 3, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {17, 0, 74, 38, 60, 0, 17, 19, 0, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
};

//15x15 graph
 int G3[20][20] = {
        {0, 141, 134, 152, 173, 289, 326, 329, 285, 401, 388, 366, 343, 305, 276, 0, 0, 0, 0, 0},
        {141, 0, 152, 150, 153, 312, 354, 313, 249, 324, 300, 272, 247, 201, 176, 0, 0, 0, 0, 0},
        {134, 152, 0, 24, 48, 168, 210, 197, 153, 280, 272, 257, 237, 210, 181, 0, 0, 0, 0, 0},
        {152, 150, 24, 0, 24, 163, 206, 182, 133, 257, 248, 233, 214, 187, 158, 0, 0, 0, 0, 0},
        {173, 153, 48, 24, 0, 160, 203, 167, 114, 234, 225, 210, 190, 165, 137, 0, 0, 0, 0, 0},
        {289, 312, 168, 163, 160, 0, 43, 90, 124, 250, 264, 270, 264, 267, 249, 0, 0, 0, 0, 0},
        {326, 354, 210, 206, 203, 43, 0, 108, 157, 271, 290, 299, 295, 303, 287, 0, 0, 0, 0, 0},
        {329, 313, 197, 182, 167, 90, 108, 0, 70, 164, 183, 195, 194, 210, 201, 0, 0, 0, 0, 0},
        {285, 249, 153, 133, 114, 124, 157, 70, 0, 141, 147, 148, 140, 147, 134, 0, 0, 0, 0, 0},
        {401, 324, 280, 257, 234, 250, 271, 164, 141, 0, 36, 67, 88, 134, 150, 0, 0, 0, 0, 0},
        {388, 300, 272, 248, 225, 264, 290, 183, 147, 36, 0, 33, 57, 104, 124, 0, 0, 0, 0, 0},
        {366, 272, 257, 233, 210, 270, 299, 195, 148, 67, 33, 0, 26, 73, 96, 0, 0, 0, 0, 0},
        {343, 247, 237, 214, 190, 264, 295, 194, 140, 88, 57, 26, 0, 48, 71, 0, 0, 0, 0, 0},
        {305, 201, 210, 187, 165, 267, 303, 210, 147, 134, 104, 73, 48, 0, 30, 0, 0, 0, 0, 0},
        {276, 176, 181, 158, 137, 249, 287, 201, 134, 150, 124, 96, 71, 30, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    };
int c;
cout << "Choose example graph(1(12x12)/ 2(12x12) or 3(15x15)): \n";
cin >> c;
if(c == 1){
int n = 12;
int BFValue[20];
int BFPrev[20];
for(int i=0; i<n; i++){
    BFValue[i] = -1;
    BFPrev[i] = -1;
}
char choice;
cout << "Enter the choice for 1 step Bellman_Ford(Uppercase)\n";
cin >> choice;
int check = 90 - choice;
if(check < 0 || check > 25){
    cout << "Invalid input\n";
    return -1;
}
for(int i=0;i<n;i++){
BF(G,n,choice,BFValue,BFPrev);
cout << "From " << choice << " ";
cout<<"step"<<i+1<<":"<<endl;
for(int j=0;j<n;j++){
cout<<BFValue[j]<<" ";
}
cout<<endl;
for(int j=0;j<n;j++){
cout<<BFPrev[j]<<" ";
}
cout<<endl;
}
cout << "Please enter the start and end node for BF Path(Uppercase): \n";
char a, b;
cin >> a >> b;
cout << "The shortest Bellman_Ford path is: ";
cout << BF_Path(G, n, a, b) << endl;
cout << "Please enter the start node for TSM(Uppercase): \n";
cin >> a;
cout << Traveling(G, 12, a);
return 1;
}
if(c == 2){
int n = 12;
int BFValue[20];
int BFPrev[20];
for(int i=0; i<n; i++){
    BFValue[i] = -1;
    BFPrev[i] = -1;
}
char choice;
cout << "Enter the choice for 1 step Bellman_Ford(Uppercase)\n";
cin >> choice;
int check = 90 - choice;
if(check < 0 || check > 25){
    cout << "Invalid input\n";
    return -1;
}
for(int i=0;i<n;i++){
BF(G2,n,choice,BFValue,BFPrev);
cout << "From " << choice << " ";
cout<<"step"<<i+1<<":"<<endl;
for(int j=0;j<n;j++){
cout<<BFValue[j]<<" ";
}
cout<<endl;
for(int j=0;j<n;j++){
cout<<BFPrev[j]<<" ";
}
cout<<endl;
}cout << "Please enter the start and end node for BF Path(Uppercase): \n";
char a, b;
cin >> a >> b;
cout << "The shortest Bellman_Ford path is: ";
cout << BF_Path(G2, n, a, b) << endl;
cout << "Please enter the start node for TSM(Uppercase): \n";
cin >> a;
cout << Traveling(G2, 12, a);
return 1;
}
if(c == 3){
int n = 15;
int BFValue[20];
int BFPrev[20];
for(int i=0; i<n; i++){
    BFValue[i] = -1;
    BFPrev[i] = -1;
}
char choice;
cout << "Enter the choice for 1 step Bellman_Ford(Uppercase)\n";
cin >> choice;
int check = 90 - choice;
if(check < 0 || check > 25){
    cout << "Invalid input\n";
    return -1;
}
for(int i=0;i<n;i++){
BF(G3,n,choice,BFValue,BFPrev);
cout << "From " << choice << " ";
cout<<"step"<<i+1<<":"<<endl;
for(int j=0;j<n;j++){
cout<<BFValue[j]<<" ";
}
cout<<endl;
for(int j=0;j<n;j++){
cout<<BFPrev[j]<<" ";
}
cout<<endl;
}cout << "Please enter the start and end node for BF Path(Uppercase): \n";
char a, b;
cin >> a >> b;
cout << "The shortest Bellman_Ford path is: ";
cout << BF_Path(G3, n, a, b) << endl;
cout << "Please enter the start node for TSM(Uppercase): \n";
cin >> a;
cout << Traveling(G3, n, a);
return 1;
}else cout << "Error input\n";
return 1;

}